#!/bin/bash

#retrieve the server name from the cli parameter
if [ $# -ne 1 ]; then
	echo "Missing parameters"
	exit -1
fi

#simple parsing of the URL
echo $1 | grep '.resilientnet.com' > /dev/null
if [ $? -ne 0 ]; then
	echo "Malfromed site name, .resilientnet.com is not found"
	exit -1
fi

#scan config file to retrieve possibile duplcated names
ls /etc/nginx/sites_enabled/{$1}.conf 2> /dev/null
if [ $? -eq 0 ]; then
	echo "Duplicated site name. Try with a new one"
	exit -1;
fi
ls /var/www/$1/
if [ $? -eq 0 ]; then
        echo "Duplicated site name. Try with a new one"
        exit -1;
fi
site=$1
echo "site name is working and usable..."
echo "generating vHost"

mkdir /var/www/$1
cp ../src/index.html ../tmp/$1.html
sed1="s/defaultplaceholder/${1}/"

sed -i $sed1 ../tmp/$1.html
mv ../tmp/$1.html  /var/www/$1/index.html

echo "generating the configuration file"
sed2="s/defaultplaceholder.resilientent.com/${site}/"
cp ../src/default_site ../tmp/$site.conf
sed -i $sed2 ../tmp/$site.conf
mv ../tmp/$site.conf /etc/nginx/sites-available
ln -s /etc/nginx/sites-available/$site.conf /etc/nginx/sites-enabled/$site.conf

#reload nginx
nginx -t
if [ $? -eq 0 ]; then
	nginx -s reload
	exit $?
fi

#execute rollback
rm -R -f /var/www/$site
rm -f /etc/nginx/sites-enabled/$site.conf
rm -f /etc/nginx/sites-available/$site.conf
